#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_SCORES 10
#define SCORES_FILE "scores.txt"

//function declaration
void playGame();
void displayScores();
void updateScores(int score);

int main()
{
    int choice;

    while (1)
    {
        system("color F0");//To change the background colour
        printf("\n\t***** Guess the Number *****\n");//Enter any options either 1,2 or 3 to continue
        printf("\t1. Play Game\n");
        printf("\t2. Display Scores\n");
        printf("\t3. Exit\n");
        printf("\tEnter your choice: ");
        scanf("\t%d", &choice);

        switch (choice)
         {
            case 1:
                playGame();
                break;
            case 2:
                displayScores();
                break;
            case 3:
                exit(0);
            default:
                printf("\tInvalid choice. Please try again.\n");
        }
    }
    return 0;
}

void playGame()
{
    time_t start, end;
    int randomNumber = rand() % 100 + 1;
    int guess;
    int attempts = 0;
    int score = 0;
    int bonusAttempts = 0;
    //start playing
    printf("\n\t\t************ Number Wizard ************\n\n");
    printf("\t\t ####  #####     ##      ####    #####\n");
    printf("\t\t#        #      #  #     #   #     #\n");
    printf("\t\t ###     #     ######    ####      #\n");
    printf("\t\t    #    #    #      #   #  #      #\n");
    printf("\t\t####     #    #      #   #   #     #\n\n");
    printf("\t\t**************************************\n\n");

    printf("\tI'm thinking of a number between 1 and 100. Can you guess it?\n\n");
    printf("\tYou have 10 attempts to guess the number.\n");
    start = time(NULL);

    while (1)
    {
        printf("\tEnter your guess (1-100): ");
        scanf("\t%d", &guess);
        attempts++;

        // Implement tricky responses
        int response = rand() % 4;

        // block of code to be executed if the condition 1 is true
        if (guess == randomNumber)
        {
            printf("\tCongratulations! You guessed the number in %d attempts.\n", attempts);
            score = 100 - (attempts*10);
            updateScores(score + bonusAttempts);
            break;
        }
        // block of code to be executed if the condition 1 is false and condition 2 is true
        else if (guess < randomNumber)
        {
            switch (response)
            {
                case 0:
                    printf("\tToo low! Try again.\n");
                    break;
                case 1:
                    printf("\tYou're getting warmer, but still low!\n");
                    break;
                case 2:
                    printf("\tAlmost there, just a little higher!\n");
                    break;
                case 3:
                    printf("\tDon't give up! Keep trying higher numbers.\n");
                    break;
            }
        }
        // block of code to be executed if the condition 1 and condition 2 are false and condition 3 is true
        else
        {
            switch (response)
            {
                case 0:
                    printf("\tToo high! Try again.\n");
                    break;
                case 1:
                    printf("\tYou're getting warmer, but still high!\n");
                    break;
                case 2:
                    printf("\tAlmost there, just a little lower!\n");
                    break;
                case 3:
                    printf("\tDon't give up! Keep trying lower numbers.\n");
                    break;
            }
        }

        if (attempts == 10)
        {
            printf("\tSorry, you couldn't guess the number within 10 attempts.\n");
            printf("\t  .-.-.   .-.-  .-.-.   .-.-.  |     |  | | | \n");
            printf("\t |       |    | |    |  |    |  |._.|   | | | \n");
            printf("\t  .-.-.  .    . .-.-.   .-.-.     |     | | | \n");
            printf("\t       | |    | |   |   |   |     |           \n");
            printf("\t  .-.-.   -.-.  |    |  |    |    |     0 0 0 \n\n\n");

            printf("\t\t        0     0  \n");
            printf("\t\t         _.-._   \n");
            printf("\t\t        -     -  \n");
            break;
        }

        // Implement dynamic attempts
        if (attempts == 5)
        {
            printf("\tYou have 5 more attempts!\n");
        }
        else if (attempts == 7)
        {
            printf("\tYou have 3 more attempts!\n");
        }
    }

    end = time(NULL);
    printf("\tThe time taken to guess the number is %.2f seconds\n", difftime(end, start));
}

void displayScores()
{
    //create a file
    FILE *file = fopen(SCORES_FILE, "r");
    if (file == NULL)
    {
        printf("\tNo scores found.\n");
        return;
    }

    int scores[MAX_SCORES];
    int count = 0;

    printf("\n\t***** Scores *****\n");
    while (fscanf(file, "%d", &scores[count]) != EOF)
        {
        printf("\t%d. %d\n", count + 1, scores[count]);
        count++;
        }
    //close the file
    fclose(file);
}

void updateScores(int score)
{
    FILE *file = fopen(SCORES_FILE, "a");
    if (file == NULL)
    {
        printf("\tError opening file.\n");
        return;
    }

    fprintf(file, "%d\n", score);
    printf("\tYour score has been added to the high scores.\n");

    fclose(file);
}
